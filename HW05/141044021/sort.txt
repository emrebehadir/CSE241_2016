mov #0,30  ;R4 counter R5 size olarak kullanılmışıtır.Sırayla 01,12,23,34,45
mov #1,23  ;56,67,78,89 seklinde sayılar kontrol edilmiş sıralama yanlış ise
mov #2,4   ;deistirilmiştir.Tüm kontorollerde (01,12,...) sıralama dogru ise
mov #3,56  ;counter 1 arttırılmış ve sort tamamlanmıstır.
mov #4,34
mov #5,56
mov #6,89
mov #7,32
mov #8,45
mov #9,25
mov r5,9  ;Sortun doğru olması için counter ulaşması gereken sayı
mov r4,0  ;Counterı sortun dogru oldugunu anlamak için kullandım.
mov #0,r3  ;>>>> 0-1 
mov #1,r2
sub r3,r2  ;Hangi sayının buyuk oldugunu anlamak için.
jpn r3,21  ; r2>r3 durumunda(+) olur yanı swap gerçeklşir.r3>r2 oldugunda
mov #0,r3  ; işlem dogrudur counter atlama satırına geçer ve counter++ 
mov r2,#0  ;Swap işlemi
mov r3,#1  ;
jmp 22     ;Swap durumnda countri arttırmamak için bi sonraki denemeye atlar
add r4,1   ;r3>R2 counter++
mov #1,r3  ;>>>> 1-2
mov #2,r2
sub r3,r2
jpn r3,30
mov #1,r3
mov r2,#1
mov r3,#2
jmp 31
add r4,1
mov #2,r3  ;>>>> 2-3
mov #3,r2
sub r3,r2
jpn r3,39
mov #2,r3
mov r2,#2
mov r3,#3
jmp 40
add r4,1
mov #3,r3  ;>>>> 3-4
mov #4,r2
sub r3,r2
jpn r3,48
mov #3,r3
mov r2,#3
mov r3,#4
jmp 49
add r4,1
mov #4,r3  ;>>>> 4-5
mov #5,r2
sub r3,r2
jpn r3,57
mov #4,r3
mov r2,#4
mov r3,#5
jmp 58
add r4,1
mov #5,r3  ;>>>> 5-6
mov #6,r2
sub r3,r2
jpn r3,66
mov #5,r3
mov r2,#5
mov r3,#6
jmp 67
add r4,1
mov #6,r3  ;>>>> 6-7
mov #7,r2
sub r3,r2
jpn r3,75
mov #6,r3
mov r2,#6
mov r3,#7
jmp 76
add r4,1
mov #7,r3  ;>>>> 7-8
mov #8,r2
sub r3,r2
jpn r3,84
mov #7,r3
mov r2,#7
mov r3,#8
jmp 85
add r4,1
mov #8,r3  ;>>>> 8-9
mov #9,r2
sub r3,r2
jpn r3,93
mov #8,r3
mov r2,#8
mov r3,#9
jmp 94
add r4,1
sub r5,r4
jpn r5,98; Counter 9 ulaşmış yani sort tamamlanmış.
mov r4,0
jmp 11 ; Counter 9 a ulamamaış yani sort tamamlanmamış
hlt
